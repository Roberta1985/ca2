{"version":3,"sources":["./src/app/pages/character-details/character-details.page.html","./src/app/pages/character-details/character-details-routing.module.ts","./src/app/pages/character-details/character-details.module.ts","./src/app/pages/character-details/character-details.page.scss","./src/app/pages/character-details/character-details.page.ts"],"names":[],"mappings":"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","file":"character-details-character-details-module-es2015.js","sourcesContent":["export default \"<!-- ngIf - Reference: -->\\n<!-- https://angular.io/api/common/NgIf -->\\n\\n<ion-header>\\n<!-- The color primary is from the ionic -->\\n\\t<ion-toolbar color=\\\"tertiary\\\">\\n\\t\\t<ion-buttons slot=\\\"start\\\">\\n\\t\\t\\t<ion-back-button defaulthref=\\\"/tabs/characters\\\"></ion-back-button>\\n\\t\\t</ion-buttons>\\n\\t\\t<ion-title>Character Details</ion-title>\\n<!-- We have two buttons, one to the method of favourite and one for method unfavourite -->\\n        <ion-buttons slot=\\\"end\\\">\\n \\t\\t\\t<ion-button (click)=\\\"unfavouriteChar()\\\" *ngIf=\\\"isFavourite\\\">\\n \\t\\t\\t\\t<ion-icon name=\\\"star\\\" slot=\\\"icon-only\\\"></ion-icon>\\n \\t\\t\\t</ion-button>\\n \\t\\t\\t<ion-button (click)=\\\"favouriteChar()\\\" *ngIf=\\\"!isFavourite\\\">\\n \\t\\t\\t\\t<ion-icon name=\\\"star-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n \\t\\t\\t</ion-button>\\n \\t\\t</ion-buttons>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n<!-- This content would be the body of html-->\\n<!-- We will access names, nicknames, birthday, occupation and image with url retrieved from API -->\\n\\t<ion-card *ngIf=\\\"character\\\">\\n\\t\\t<ion-card-content>\\n\\t\\t\\t<h2> Name: {{ character.name }} </h2>\\n\\t\\t</ion-card-content>\\n\\n        <ion-card-content>\\n\\t\\t\\t<h2> Nickname: {{ character.nickname }} </h2>\\n\\t\\t</ion-card-content>\\n\\n        <ion-card-content>\\n\\t\\t\\t<h2>Birthday: {{ character.birthday }} </h2>\\n\\t\\t</ion-card-content>\\n\\n        <ion-card-content>\\n\\t\\t\\t<h2> Occupation: {{ character.occupation }} </h2> \\n\\t\\t</ion-card-content>\\n\\n        <ion-card-content>\\n\\t\\t\\t<img src=\\\"{{ character.img }}\\\">\\n\\t\\t</ion-card-content>\\n\\t</ion-card>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CharacterDetailsPage } from './character-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CharacterDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CharacterDetailsPageRoutingModule {}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CharacterDetailsPageRoutingModule } from './character-details-routing.module';\n\nimport { CharacterDetailsPage } from './character-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CharacterDetailsPageRoutingModule\n  ],\n  declarations: [CharacterDetailsPage]\n})\nexport class CharacterDetailsPageModule {}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoYXJhY3Rlci1kZXRhaWxzL2NoYXJhY3Rlci1kZXRhaWxzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../services/api.service';\nimport { FavouriteService } from './../../services/favourite.service';\n//Favourite Service is settled in the Favourite Service, which allows to use the page to create a like and dislike service \n\n@Component({\n    selector: 'app-character-details',\n    templateUrl: './character-details.page.html',\n    styleUrls: ['./character-details.page.scss'],\n})\n\nexport class CharacterDetailsPage implements OnInit {\n\n    //We need some variables, characters to obtain all characters, isFavourite to check a boolean flag\n    //ID is only for this page\n    character: any;\n    isFavourite = false;\n    ID = null;\n    \n\n    constructor(private activatedRoute: ActivatedRoute, private api: ApiService, private favouriteService: FavouriteService) { }\n    //Inside the construtor we call the functions we want to use\n\n    ngOnInit() {\n\n        this.ID = this.activatedRoute.snapshot.paramMap.get('id');\n        //We have the route to check for one ID in our method\n\n        this.api.getCharacter(this.ID).subscribe(res => {\n            //Once we retrieved this information from the api.service we run the following commands:\n            //put the ID in the array and the ID will be accessed in the first box\n            this.character = res[0];  \n            //Print all data in the console, this way we can check the information is being retrieved\n            console.log(JSON.stringify(this.character.char_id));\n         });\n         \n         //We will check if the page is favourite or not, if the ID is favourite, we keep favourite\n         this.favouriteService.isFavourite(this.ID).then(isFav => {\n             this.isFavourite = isFav;\n         });\n\n     }\n\n     //The following two methods will check if the page is favourite or unfavourite, and procced with alternate \n     //solution once the user wants to like or dislike the pages\n     favouriteChar() {\n\n         this.favouriteService.favouriteChar(this.ID).then(() => {\n             this.isFavourite = true;\n         });\n     }\n\n     unfavouriteChar() {\n         this.favouriteService.unfavouriteChar(this.ID).then(() => {\n             this.isFavourite = false;\n         });\n    \n    }\n\n}\n"],"sourceRoot":"webpack:///"}