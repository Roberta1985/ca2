{"version":3,"sources":["src/app/pages/character-details/character-details.page.html","src/app/pages/character-details/character-details-routing.module.ts","src/app/pages/character-details/character-details.module.ts","src/app/pages/character-details/character-details.page.scss","src/app/pages/character-details/character-details.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!-- ngIf - Reference: -->\\n<!-- https://angular.io/api/common/NgIf -->\\n\\n<ion-header>\\n<!-- The color primary is from the ionic -->\\n\\t<ion-toolbar color=\\\"tertiary\\\">\\n\\t\\t<ion-buttons slot=\\\"start\\\">\\n\\t\\t\\t<ion-back-button defaulthref=\\\"/tabs/characters\\\"></ion-back-button>\\n\\t\\t</ion-buttons>\\n\\t\\t<ion-title>Character Details</ion-title>\\n<!-- We have two buttons, one to the method of favourite and one for method unfavourite -->\\n        <ion-buttons slot=\\\"end\\\">\\n \\t\\t\\t<ion-button (click)=\\\"unfavouriteChar()\\\" *ngIf=\\\"isFavourite\\\">\\n \\t\\t\\t\\t<ion-icon name=\\\"star\\\" slot=\\\"icon-only\\\"></ion-icon>\\n \\t\\t\\t</ion-button>\\n \\t\\t\\t<ion-button (click)=\\\"favouriteChar()\\\" *ngIf=\\\"!isFavourite\\\">\\n \\t\\t\\t\\t<ion-icon name=\\\"star-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n \\t\\t\\t</ion-button>\\n \\t\\t</ion-buttons>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n<!-- This content would be the body of html-->\\n<!-- We will access names, nicknames, birthday, occupation and image with url retrieved from API -->\\n\\t<ion-card *ngIf=\\\"character\\\">\\n\\t\\t<ion-card-content>\\n\\t\\t\\t<h2> Name: {{ character.name }} </h2>\\n\\t\\t</ion-card-content>\\n\\n        <ion-card-content>\\n\\t\\t\\t<h2> Nickname: {{ character.nickname }} </h2>\\n\\t\\t</ion-card-content>\\n\\n        <ion-card-content>\\n\\t\\t\\t<h2>Birthday: {{ character.birthday }} </h2>\\n\\t\\t</ion-card-content>\\n\\n        <ion-card-content>\\n\\t\\t\\t<h2> Occupation: {{ character.occupation }} </h2> \\n\\t\\t</ion-card-content>\\n\\n        <ion-card-content>\\n\\t\\t\\t<img src=\\\"{{ character.img }}\\\">\\n\\t\\t</ion-card-content>\\n\\t</ion-card>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CharacterDetailsPage } from './character-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CharacterDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CharacterDetailsPageRoutingModule {}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CharacterDetailsPageRoutingModule } from './character-details-routing.module';\n\nimport { CharacterDetailsPage } from './character-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CharacterDetailsPageRoutingModule\n  ],\n  declarations: [CharacterDetailsPage]\n})\nexport class CharacterDetailsPageModule {}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoYXJhY3Rlci1kZXRhaWxzL2NoYXJhY3Rlci1kZXRhaWxzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../services/api.service';\nimport { FavouriteService } from './../../services/favourite.service';\n//Favourite Service is settled in the Favourite Service, which allows to use the page to create a like and dislike service \n\n@Component({\n    selector: 'app-character-details',\n    templateUrl: './character-details.page.html',\n    styleUrls: ['./character-details.page.scss'],\n})\n\nexport class CharacterDetailsPage implements OnInit {\n\n    //We need some variables, characters to obtain all characters, isFavourite to check a boolean flag\n    //ID is only for this page\n    character: any;\n    isFavourite = false;\n    ID = null;\n    \n\n    constructor(private activatedRoute: ActivatedRoute, private api: ApiService, private favouriteService: FavouriteService) { }\n    //Inside the construtor we call the functions we want to use\n\n    ngOnInit() {\n\n        this.ID = this.activatedRoute.snapshot.paramMap.get('id');\n        //We have the route to check for one ID in our method\n\n        this.api.getCharacter(this.ID).subscribe(res => {\n            //Once we retrieved this information from the api.service we run the following commands:\n            //put the ID in the array and the ID will be accessed in the first box\n            this.character = res[0];  \n            //Print all data in the console, this way we can check the information is being retrieved\n            console.log(JSON.stringify(this.character.char_id));\n         });\n         \n         //We will check if the page is favourite or not, if the ID is favourite, we keep favourite\n         this.favouriteService.isFavourite(this.ID).then(isFav => {\n             this.isFavourite = isFav;\n         });\n\n     }\n\n     //The following two methods will check if the page is favourite or unfavourite, and procced with alternate \n     //solution once the user wants to like or dislike the pages\n     favouriteChar() {\n\n         this.favouriteService.favouriteChar(this.ID).then(() => {\n             this.isFavourite = true;\n         });\n     }\n\n     unfavouriteChar() {\n         this.favouriteService.unfavouriteChar(this.ID).then(() => {\n             this.isFavourite = false;\n         });\n    \n    }\n\n}\n"],"sourceRoot":"webpack:///","file":"character-details-character-details-module-es5.js"}